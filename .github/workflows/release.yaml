name: Create release

on:
  pull_request:
  push:
    tags:
      - "v*"

env:
  # GH_TAG: ${{github.ref_name}}
  GH_TAG: "v0.0.0"

permissions:
  contents: write

jobs:
  # build-release-binaries:
  #   name: Build Relase Binaries
  #   runs-on: ubuntu-latest
  #   steps:
  #     # https://github.com/actions/checkout
  #     - uses: actions/checkout@v4
  #     # Build the binaries using the `build/artifacts.sh` script in the repo
  #     - name: Build Artifacts
  #       run: build/artifacts.sh $GH_TAG
  #     # https://github.com/marketplace/actions/upload-a-build-artifact
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: binaries
  #         path: bin/artifacts/

  update-helm-chart-version:
    name: Update Helm Chart Version
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - run: git checkout HEAD^
      - name: Update version
        run: |
          CAPTURE_GROUP="appVersion:\ \"v[0-9]\+\.[0-9]\+\.[0-9]\+\""
          REPLACEMENT="appVersion\:\ \"$GH_TAG\""
          echo "Updating Piko Helm Chart to Version $GH_TAG"
          sed -i'' "s/$CAPTURE_GROUP/$REPLACEMENT/" $GITHUB_WORKSPACE/operations/helm/piko/Chart.yaml
          echo "***"
          echo $GITHUB_HEAD_REF
          echo "***"
          git config --global user.name 'Github Action Release'
          git config --global user.email 'noreply'
          git commit -am "chore: bump helm chart version"
          git push

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs: [build-release-binaries]
  #   steps:
  #     # https://github.com/actions/checkout
  #     - uses: actions/checkout@v4
  #     # https://github.com/actions/download-artifact
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: binaries
  #         path: bin/artifacts/
  #     - name: Create Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: build/release.sh $GH_TAG

